* crear archivo de configuración en visual studio
-------------------------------
"se crea un archivo en la raiz del proyecto"
procfile 
        web: gunicorn run:app
-------
pip install gunicorn
"instala el archivo nuevo en visual estudio"
pip freeze > requirements.txt
"actualiza todos las librerias del proyecto"
----
*  COMO SUBIRLO A GIT
- abrir githun en web
- crear repositorio
-nombre del proyecto- crear repositori
git config user.name
git config --global user.name "Nicolcepeda"
git config --global user.email "Nicolcepeda@gmail.com" 

git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/andetazz/tiendamotosmysql.git
git push -u origin main

*----- para adicionar cuando hay cambios en el proyecto 
git add .
git commit -m "first commit"
git push -u origin main

 <div class="container mt-4">
        <div class="row">
            {% for producto in dataprod %}
            <div class="col-md-3 d-flex align-items-stretch"> <!-- 6 columnas -->
                <div class="card shadow-sm w-100">
                    <img src="{{ url_for('static', filename='imagenes/' + producto.get_img('img1')) }}"
                        class="card-img-top fixed-img" alt="{{ producto.nombre }}">
                    <div class="card-body d-flex flex-column text-center">
                        <h5 class="card-title">{{ producto.nombre }}</h5>
                        <p class="card-text text-muted">Categoría: {{ producto.idcategoria }}</p>
                        <h4 class="text-primary">$ {{ producto.precio }}</h4>
                        <p class="card-text">{{ producto.descripcion }}</p>
                        <a href="{{ url_for('carrito.add', id=producto.idproducto) }}" class="btn btn-primary mt-auto">
                            Agregar al carrito
                        </a>
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>


*deplgar el proyecto en render
"luego nos dirigimos a la pagina web render creamos el usuario
https://render.com/
"vamos"
new
web service
"en el campo Start command colocamos el codigo"
gunicorn run:app
free
deplou web service.


python run.py
*-------
desplegar el proyecto pero con MySQL
investigar sobre FIREBASE.
-------

https://flet.dev/docs/

desarrollo en Python para dispositivos móviles 
------------------
pdg flask
pip install reportlab
pip install datetime 
pip install pytz
--------------------
migrar datos de mysql a mysqllite
chatgpt
como el addcarrito es un modal quiero que cuando le de agregar carrito no me vuelva a cargar  el dasboard por que vuelve a cargarme los productos y quiero que se quede es en el registro del producto que estaba adicionando sin refrescar el index en la funcion add @bp.route('/carrito/add/<int:id>', methods=['GET', 'POST']) 
@login_required
def add(id):

from sqlalchemy import create_engine, MetaData, Table, select

# Conexión a MySQL
engine_mysql = create_engine('mysql+pymysql://usuario:clave@host/base_mysql')
# Conexión a SQLite
engine_sqlite = create_engine('sqlite:///ruta/a/tu_sqlite.db')

metadata = MetaData()

# Ejemplo: sincronizar la tabla 'mi_tabla'
mi_tabla = Table('mi_tabla', metadata, autoload_with=engine_mysql)

# Extraer datos de MySQL
with engine_mysql.connect() as conn_mysql:
    resultados = conn_mysql.execute(select(mi_tabla)).fetchall()

# Insertar datos en SQLite
with engine_sqlite.connect() as conn_sqlite:
    for fila in resultados:
        # Convertir la fila a diccionario para el insert
        conn_sqlite.execute(mi_tabla.insert().values(**fila._mapping))
    conn_sqlite.commit()